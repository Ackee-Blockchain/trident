name: Test Fuzz Tests

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - 'documentation/**'
      - '.github/**'
    branches:
      - develop
      - master


jobs:
  Fuzz-Tests:
    name: Fuzz Tests
    runs-on: ubuntu-24.04
    steps:
      - run: echo "Starting Fuzz Tests"

  simple-cpi:
    name: Fuzz Tests - Simple CPI
    needs: Fuzz-Tests
    # Runs on an Ubuntu 20.04 runner
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository  # Checkout the repository to get access to the project files

      # https://github.com/Swatinem/rust-cache
      - name: Cache Rust and its Packages
        # Caches Rust dependencies to avoid redundant downloads and speed up builds
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "fuzz"
          shared-key: "trident-rust-cache"  # Using a shared cache key for multiple jobs

      - name: Setup Rust Environment
        # Sets up the Rust environment (e.g., installing Rust and required components)
        uses: ./.github/actions/setup-rust/

      - name: Install Trident
        # Sets up the Trident
        uses: ./.github/actions/setup-trident/

      # Cache the target folder
      - name: Cache Target Folder
        uses: actions/cache@v3
        with:
          path: examples/cpi/trident-tests/target  # Cache the folder where build artifacts are stored
          key: target-${{ runner.os }}-simple-cpi 

      # Run the fuzzing test using Trident in the simple-cpi-6 directory
      - name: Test Fuzz
        working-directory: examples/cpi/trident-tests  # Set the working directory for the fuzzing test
        run: trident fuzz run fuzz_0  # Run the fuzz test with trident

  maze-0:
    name: Fuzz Tests - Trident Benchmark Maze 0
    needs: Fuzz-Tests
    # Runs on an Ubuntu 20.04 runner for a different fuzz test
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository  # Checkout the repository

      # https://github.com/Swatinem/rust-cache
      - name: Cache Rust and its Packages
        # Caches Rust dependencies to avoid redundant downloads and speed up builds
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "fuzz" # Using a locally shared cache key
          shared-key: "trident-rust-cache"  # Using a shared cache key for multiple jobs

      - name: Setup Rust Environment
        # Sets up the Rust environment (e.g., installing Rust and required components)
        uses: ./.github/actions/setup-rust/

      - name: Install Trident
        # Sets up the Trident
        uses: ./.github/actions/setup-trident/

      # Cache the target folder
      - name: Cache Target Folder
        uses: actions/cache@v3
        with:
          path: examples/trident-benchmark/maze_0/trident-tests/target  # Cache the folder where build artifacts are stored
          key: target-${{ runner.os }}-maze-0 

      # Run the fuzzing test using Trident in the arbitrary-limit-inputs-5 directory
      - name: Test Fuzz
        working-directory: examples/trident-benchmark/maze_0/trident-tests  # Set the working directory for the fuzzing test
        run: trident fuzz run fuzz_0  # Run the fuzz test with trident

  metaplex:
    name: Fuzz Tests - Metaplex CPI
    needs: Fuzz-Tests
    # Runs on an Ubuntu 20.04 runner for a different fuzz test
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository  # Checkout the repository

      # https://github.com/Swatinem/rust-cache
      - name: Cache Rust and its Packages
        # Caches Rust dependencies to avoid redundant downloads and speed up builds
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "fuzz" # Using a locally shared cache key
          shared-key: "trident-rust-cache"  # Using a shared cache key for multiple jobs

      - name: Setup Rust Environment
        # Sets up the Rust environment (e.g., installing Rust and required components)
        uses: ./.github/actions/setup-rust/

      - name: Install Trident
        # Sets up the Trident
        uses: ./.github/actions/setup-trident/

      # Cache the target folder
      - name: Cache Target Folder
        uses: actions/cache@v3
        with:
          path: examples/metaplex/trident-tests/target  # Cache the folder where build artifacts are stored
          key: target-${{ runner.os }}-metaplex 

      # Run the fuzzing test using Trident in the cpi-metaplex-7 directory
      - name: Test Fuzz
        working-directory: examples/metaplex/trident-tests  # Set the working directory for the fuzzing test
        run: trident fuzz run fuzz_0  # Run the fuzz test with trident

  checks:
    name: Fuzz Tests (Checks)
    needs: [metaplex, maze-0, simple-cpi]
    runs-on: ubuntu-24.04
    steps:
      - run: echo "All fuzz tests completed successfully"
