// DO NOT EDIT - automatically generated file (except `use` statements inside the `*_instruction` module
pub mod dummy_example_instruction {
    use trident_client::prelude::*;
    use trident_client::test::*;
    pub const PROGRAM_ID: Pubkey = pubkey!("ETC9SS2iTY8xFF6etnvsFaxDz9WhLryXR2Z6k81Z43U4");
    pub async fn initialize_ix(
        client: &Client,
        i__var1: bool,
        i__var2: u8,
        i__var3: i8,
        i__var4: u16,
        i__var5: i16,
        i__var6: u32,
        i__var7: i32,
        i__var8: u64,
        i__var9: i32,
        i__var10: f64,
        i__var11: u128,
        i__var12: i128,
        i__ver13: Vec<u8>,
        i__var14: String,
        i__var15: Pubkey,
        i__var16: Option<i16>,
        i__var17: Vec<u32>,
        i__var18: [i128; 5usize],
        i__var19: InputParameter,
        i__var20: Vec<Vec<Vec<Vec<Vec<u8>>>>>,
        i__var21: Vec<Vec<Vec<Vec<Option<u8>>>>>,
        i__var22: Vec<Vec<Vec<Vec<Option<Vec<u8>>>>>>,
        a_account: Pubkey,
        a_account_info: Pubkey,
        a_account_loader: Pubkey,
        a_boxed: Pubkey,
        a_interace: Pubkey,
        a_interface_account: Pubkey,
        a_option: Pubkey,
        a_program: Pubkey,
        a_signer: Pubkey,
        a_system_account: Pubkey,
        a_sysvar: Pubkey,
        a_unchecked_account: Pubkey,
        signers: impl IntoIterator<Item = Keypair> + Send + 'static,
    ) -> Result<EncodedConfirmedTransactionWithStatusMeta, ClientError> {
        client
            .send_instruction(
                PROGRAM_ID,
                dummy_example::instruction::InitializeIx {
                    _var1: i__var1,
                    _var2: i__var2,
                    _var3: i__var3,
                    _var4: i__var4,
                    _var5: i__var5,
                    _var6: i__var6,
                    _var7: i__var7,
                    _var8: i__var8,
                    _var9: i__var9,
                    _var10: i__var10,
                    _var11: i__var11,
                    _var12: i__var12,
                    _ver13: i__ver13,
                    _var14: i__var14,
                    _var15: i__var15,
                    _var16: i__var16,
                    _var17: i__var17,
                    _var18: i__var18,
                    _var19: i__var19,
                    _var20: i__var20,
                    _var21: i__var21,
                    _var22: i__var22,
                },
                dummy_example::accounts::InitializeIx {
                    account: a_account,
                    account_info: a_account_info,
                    account_loader: a_account_loader,
                    boxed: a_boxed,
                    interace: a_interace,
                    interface_account: a_interface_account,
                    option: a_option,
                    program: a_program,
                    signer: a_signer,
                    system_account: a_system_account,
                    sysvar: a_sysvar,
                    unchecked_account: a_unchecked_account,
                },
                signers,
            )
            .await
    }
    pub fn initialize_ix_ix(
        i__var1: bool,
        i__var2: u8,
        i__var3: i8,
        i__var4: u16,
        i__var5: i16,
        i__var6: u32,
        i__var7: i32,
        i__var8: u64,
        i__var9: i32,
        i__var10: f64,
        i__var11: u128,
        i__var12: i128,
        i__ver13: Vec<u8>,
        i__var14: String,
        i__var15: Pubkey,
        i__var16: Option<i16>,
        i__var17: Vec<u32>,
        i__var18: [i128; 5usize],
        i__var19: InputParameter,
        i__var20: Vec<Vec<Vec<Vec<Vec<u8>>>>>,
        i__var21: Vec<Vec<Vec<Vec<Option<u8>>>>>,
        i__var22: Vec<Vec<Vec<Vec<Option<Vec<u8>>>>>>,
        a_account: Pubkey,
        a_account_info: Pubkey,
        a_account_loader: Pubkey,
        a_boxed: Pubkey,
        a_interace: Pubkey,
        a_interface_account: Pubkey,
        a_option: Pubkey,
        a_program: Pubkey,
        a_signer: Pubkey,
        a_system_account: Pubkey,
        a_sysvar: Pubkey,
        a_unchecked_account: Pubkey,
    ) -> Instruction {
        Instruction {
            program_id: PROGRAM_ID,
            data: dummy_example::instruction::InitializeIx {
                _var1: i__var1,
                _var2: i__var2,
                _var3: i__var3,
                _var4: i__var4,
                _var5: i__var5,
                _var6: i__var6,
                _var7: i__var7,
                _var8: i__var8,
                _var9: i__var9,
                _var10: i__var10,
                _var11: i__var11,
                _var12: i__var12,
                _ver13: i__ver13,
                _var14: i__var14,
                _var15: i__var15,
                _var16: i__var16,
                _var17: i__var17,
                _var18: i__var18,
                _var19: i__var19,
                _var20: i__var20,
                _var21: i__var21,
                _var22: i__var22,
            }
            .data(),
            accounts: dummy_example::accounts::InitializeIx {
                account: a_account,
                account_info: a_account_info,
                account_loader: a_account_loader,
                boxed: a_boxed,
                interace: a_interace,
                interface_account: a_interface_account,
                option: a_option,
                program: a_program,
                signer: a_signer,
                system_account: a_system_account,
                sysvar: a_sysvar,
                unchecked_account: a_unchecked_account,
            }
            .to_account_metas(None),
        }
    }
}
